// <auto-generated />
using System;
using GamebookPilar.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GamebookPilar.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241126230227_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.11");

            modelBuilder.Entity("GamebookPilar.Server.Models.Background", b =>
                {
                    b.Property<int>("BackgroundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmptyFlareUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmptyNaturalUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FullFlareUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FullNaturalUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("BackgroundId");

                    b.ToTable("Backgrounds");
                });

            modelBuilder.Entity("GamebookPilar.Server.Models.KeypadButton", b =>
                {
                    b.Property<int>("KeypadButtonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("LocationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocationX")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocationY")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Pin")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TargetLocationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("KeypadButtonId");

                    b.HasIndex("LocationId");

                    b.ToTable("KeypadButtons");
                });

            modelBuilder.Entity("GamebookPilar.Server.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BackgroundId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ContainedItem")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Dialogue")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LocationId");

                    b.HasIndex("BackgroundId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("GamebookPilar.Server.Models.LockButton", b =>
                {
                    b.Property<int>("LockButtonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("KeyIndex")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("LocationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocationX")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocationY")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TargetLocationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("LockButtonId");

                    b.HasIndex("LocationId");

                    b.ToTable("LockButtons");
                });

            modelBuilder.Entity("GamebookPilar.Server.Models.MoveButton", b =>
                {
                    b.Property<int>("MoveButtonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("LocationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocationX")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocationY")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TargetLocationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MoveButtonId");

                    b.HasIndex("LocationId");

                    b.ToTable("MoveButtons");
                });

            modelBuilder.Entity("GamebookPilar.Server.Models.KeypadButton", b =>
                {
                    b.HasOne("GamebookPilar.Server.Models.Location", null)
                        .WithMany("KeypadButtons")
                        .HasForeignKey("LocationId");
                });

            modelBuilder.Entity("GamebookPilar.Server.Models.Location", b =>
                {
                    b.HasOne("GamebookPilar.Server.Models.Background", "Background")
                        .WithMany()
                        .HasForeignKey("BackgroundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Background");
                });

            modelBuilder.Entity("GamebookPilar.Server.Models.LockButton", b =>
                {
                    b.HasOne("GamebookPilar.Server.Models.Location", null)
                        .WithMany("LockButtons")
                        .HasForeignKey("LocationId");
                });

            modelBuilder.Entity("GamebookPilar.Server.Models.MoveButton", b =>
                {
                    b.HasOne("GamebookPilar.Server.Models.Location", null)
                        .WithMany("MoveButtons")
                        .HasForeignKey("LocationId");
                });

            modelBuilder.Entity("GamebookPilar.Server.Models.Location", b =>
                {
                    b.Navigation("KeypadButtons");

                    b.Navigation("LockButtons");

                    b.Navigation("MoveButtons");
                });
#pragma warning restore 612, 618
        }
    }
}
